##
## x509 certificate. It is common for all webs (servers).
##

ssl_certificate     /etc/letsencrypt/live/blackpearl.10x.es/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/blackpearl.10x.es/privkey.pem;
ssl_ciphers	    "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

##
## x509 certificate. It is common for all webs (servers).
##

server {
       listen 80  default_server;
       listen [::]:80;
       server_name _;
       # If request doesn't match any actual server, close connection doing nothing.
       # 444 (nginx): Connection Closed Without Response
       return 444;
       }

server {
       listen 80;
       listen [::]:80;
       server_name fvi.intec.es;
       root /var/www;
       location /.well-known/acme-challenge/ {
          try_files $uri $uri/ =404;
          }
       location / {
          return 301 https://$server_name$request_uri;
          }
       }

server {
       listen 80;
       listen [::]:80;
       server_name blackpearl.10x.es;
       root /var/www;
       location /.well-known/acme-challenge/ {
          try_files $uri $uri/ =404;
          }
       location /135408f314f7697fdf100af39f707a99.txt {
          try_files $uri $uri/ =404;
          }
       location / {
          return 301 https://$server_name$request_uri;
          }
       }

server {
       listen 80;
       listen [::]:80;
       server_name fxa.anteroy.com;
       root /var/www;
       location /.well-known/acme-challenge/ {
          try_files $uri $uri/ =404;
          }
       }

server {
       listen 80;
       listen [::]:80;
       server_name .anteroy.com;
       root /var/www;
       location /.well-known/acme-challenge/ {
          try_files $uri $uri/ =404;
          }
        location / {
          return 301 https://$server_name$request_uri;
          }
       }

##
## HTTPS servers
##

server {
       listen 443 ssl;
       listen [::]:443 ssl;

       root /home/gus/webconejo/html;

       index index.html;

       server_name fvi.intec.es;

       auth_basic "Si no eres amigo no entras";
       auth_basic_user_file /etc/nginx/sites-enabled/.htpasswd;

       location / {
          # First attempt to serve request as file, then
          # as directory, then fall back to displaying a 404.
          try_files $uri $uri/ =404;
          }
       }

server {
       listen 443 ssl;
       listen [::]:443 ssl;

       root /home/gus/perla;

       index index.php index.html;

       server_name blackpearl.10x.es;

       auth_basic "Si no eres amigo no entras";
       auth_basic_user_file /etc/nginx/sites-enabled/.htpasswd;

       # set client body size to 2M #
       client_max_body_size 8G;

       location / {
          try_files $uri $uri/ =404;
          }
       # pass the PHP scripts to FastCGI server listening on /var/run/php5-fpm.sock
       location ~ /filemanager/.*\.php$ {
                try_files $uri =404;
                fastcgi_pass unix:/var/run/php5-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
          }
       #location /fastcgitest/ {
       #         fastcgi_pass hp-dv7.fvi.intec.es:5050;
       #         include fastcgi_params;
       #   }
       }

server {
       listen 443 ssl;
       listen [::]:443 ssl;

       root /home/gus/anteroy.com;

       index index.html;

       server_name .anteroy.com;

       location / {
          try_files $uri $uri/ =404;
          }
       }


##
## fxa related
##

## default --> auth
#server {
#       listen 192.168.101.168:443 ssl;
#
#       server_name fxa.anteroy.com;
#
#       location / {
#                  proxy_pass        http://auth:9000;
#                  proxy_pass_header Access-Control-Allow-Origin;
#                  proxy_pass_header Access-Control-Allow-Methods;
#                  proxy_pass_header Access-Control-Allow-Headers;
#          }
#       }

## auth:
#server {
#       listen 192.168.101.168:9000 ssl;
#
#       location / {
#                  proxy_pass        http://auth:9000;
#                  proxy_pass_header Access-Control-Allow-Origin;
#                  proxy_pass_header Access-Control-Allow-Methods;
#                  proxy_pass_header Access-Control-Allow-Headers;
#          }
#       }

## profile:
#server {
#       listen 192.168.101.168:1111 ssl;
#
#       location / {
#                  proxy_pass        http://profile:1111;
#                  proxy_pass_header Access-Control-Allow-Origin;
#                  proxy_pass_header Access-Control-Allow-Methods;
#                  proxy_pass_header Access-Control-Allow-Headers;
#          }
#       }

## content:
#server {
#       listen 192.168.101.168:3030 ssl;
#
#       location / {
#                  proxy_pass        http://content:3030;
#                  proxy_pass_header Access-Control-Allow-Origin;
#                  proxy_pass_header Access-Control-Allow-Methods;
#                  proxy_pass_header Access-Control-Allow-Headers;
#          }
#       }

## sync:
#server {
#       listen 192.168.101.168:6000 ssl;
#
#       location / {
#                  proxy_pass        http://sync:6000;
#                  proxy_pass_header Access-Control-Allow-Origin;
#                  proxy_pass_header Access-Control-Allow-Methods;
#                  proxy_pass_header Access-Control-Allow-Headers;
#          }
#       }

## syncto:
#server {
#       listen 192.168.101.168:8000 ssl;
#
#       location / {
#                  proxy_pass        http://syncto:8000;
#                  proxy_pass_header Access-Control-Allow-Origin;
#                  proxy_pass_header Access-Control-Allow-Methods;
#                  proxy_pass_header Access-Control-Allow-Headers;
#          }
#       }

## oauth:
#server {
#       listen 192.168.101.168:9010 ssl;
#
#       location / {
#                  proxy_pass        http://oauth:9010;
#                  proxy_pass_header Access-Control-Allow-Origin;
#                  proxy_pass_header Access-Control-Allow-Methods;
#                  proxy_pass_header Access-Control-Allow-Headers;
#          }
#       }
